//get first max ith element
#include<iostream>
#include<climits>
using namespace std;
int kadane(int arr[],int n)
{
    int mxsum=INT_MIN;
    for(int i=0;i<n;i++)
    {
        mxsum=max(mxsum,arr[i]);
        cout<<mxsum<<endl;
    }

}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    cout<<"Get ans "<<kadane(arr,n)<<endl;
}

//MIN ALSO
#include<iostream>
#include<climits>
using namespace std;
int kadane(int arr[],int n)
{
    int mnsum=INT_MAX;
    for(int i=0;i<n;i++)
    {
        mnsum=min(mnsum,arr[i]);
        cout<<mnsum<<endl;
    }

}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    cout<<"Get ans "<<kadane(arr,n)<<endl;
}

//Sum of Sub array
#include<iostream>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    int sum=0;
    for(int i=0;i<n;i++)
    {
        sum=0;
        for(int j=i;j<n;j++)
        {
            sum+=arr[j];
            cout<<"Total Sum of subarray will be:"<<sum<<endl;
            
        }
    }
    return 0;
}

//Longest Arithmetic Subarray
#include<iostream>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    int ans=2;
    int pd=arr[1]-arr[0];
    int j=2;
    int curr=2;
    while(j<n)
    {
        if(pd==arr[j]-arr[j-1])
        {
            curr++;
        }
        else
        {
            pd=arr[j]-arr[j-1];
            curr=2;
            
        }
        ans=max(ans,curr);
        j++;
    }
    cout<<"The answer will be"<<ans;
    return 0;
}


//RECORD BREAK
#include<iostream>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int a[n+1];
    a[n]=-1;
    
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    
    if(n==1)
    {
        cout<<"1"<<endl;
        return 0;
    }
    int ans=0;
    int mx=-1;
    for(int i=0;i<n;i++)
    {
        if(a[i]>mx && a[i]>a[i+1] )
        {
            ans++;
        }
        mx=max(mx,a[i]);
    }
    cout<<mx<<endl;
    return 0;
}
